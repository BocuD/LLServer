@model LLServer.Gacha.Database.GachaTable

@{
    Layout = "../_Layout.cshtml";
}

<h2>Editing Information @Model.id</h2>

<style>
.cardIdRow {
   display: flex;
   align-items: center;
}

.cardIdInput {
   margin-right: 10px;
}
</style>

@using (Html.BeginForm("EditTable", "GachaTableEditor", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "")
        @Html.HiddenFor(model => model.id)
        
        <h2>Table scan metadata</h2>
            @Html.Partial("_TableMetaData", Model.metaData)
        <br/>
        
        <h2>Character IDs</h2>
        @Html.Partial("_CharacterIconEditor", Model.characterIdBools)
        
        <h2>Table data editor</h2>
        <div class="form-group">
            <span>Enabling isValid will allow this gacha table to get used in game</span>
            <br/>
            @Html.LabelFor(model => model.isValid)
            @Html.EditorFor(model => model.isValid)
            <br/>
            <span>Make sure you only edit the name if this table was manually created and not made with the log scanner!</span>
            @Html.LabelFor(model => model.newName)
            @Html.EditorFor(model => model.newName)
            <br/>
        </div>

        <br/>
        
        <div class="form-group">
            @Html.LabelFor(model => model.cardIds, "Cards")
            <div id="cardIdsContainer">
                @for (int i = 0; i < Model.cardIds.Length; i++)
                {
                    <div class="cardIdRow">
                        @Html.DropDownListFor(model => model.cardIds[i], ViewBag.cardIdNamePairs as SelectList, new { @class = "cardIdInput" })
                        <button type="button" class="removeCardIdBtn">Remove</button>
                    </div>
                }
            </div>
            <button type="button" id="addCardIdBtn">Add Card ID</button>
        </div>
        
        <br/>
        
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            <input type="submit" value="Save" class="nav-btn"/>
        </div>
    </div>
}

@section scripts {
    <script>
        $(document).ready(function () {
            var cardIdNamePairs = @Html.Raw(Json.Serialize(ViewBag.cardIdNamePairs));
            var cardIdCount = @Model.cardIds.Length; // Get the initial count from the server
            
            // Add Card ID button click event
            $("#addCardIdBtn").click(function () {
                var select = $('<select class="cardIdInput" id="cardIds_' + cardIdCount + '_" name="cardIds[' + cardIdCount + ']" ></select>');
                for(var i = 0; i < cardIdNamePairs.length; i++) {
                    select.append('<option value="' + cardIdNamePairs[i].value + '">' + cardIdNamePairs[i].text + '</option>');
                }
                var newRow = $('<div class="cardIdRow"></div>').append(select).append('<button type="button" class="removeCardIdBtn">Remove</button>');
                $("#cardIdsContainer").append(newRow);
                cardIdCount++; // Increment the count each time you add a dropdown
            });
            
            // Remove Card ID button click event
            $(document).on("click", ".removeCardIdBtn", function () {
                $(this).closest(".cardIdRow").remove();
            });

        });
    </script>
}
